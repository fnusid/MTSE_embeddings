LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name   | Type                 | Params | Mode
--------------------------------------------------------
0 | model  | RecursiveAttnPooling | 6.6 M  | train
1 | loss   | LossWrapper          | 0      | train
2 | metric | MetricsWrapper       | 0      | train
--------------------------------------------------------
6.6 M     Trainable params
0         Non-trainable params
6.6 M     Total params
26.599    Total estimated model params size (MB)
116       Modules in train mode
0         Modules in eval mode
Sanity Checking DataLoader 0:   0%|                                                                                                                                                                                                                                             | 0/2 [00:00<?, ?it/s]> /gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py(48)validation_step()
/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:433: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=14` in the `DataLoader` to improve performance.
/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/torchaudio/_backend/utils.py:213: UserWarning: In 2.9, this function's implementation will be changed to use torchaudio.load_with_torchcodec` under the hood. Some parameters like ``normalize``, ``format``, ``buffer_size``, and ``backend`` will be ignored. We recommend that you port your code to rely directly on TorchCodec's decoder instead: https://docs.pytorch.org/torchcodec/stable/generated/torchcodec.decoders.AudioDecoder.html#torchcodec.decoders.AudioDecoder.
  warnings.warn(
/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/torchaudio/_backend/ffmpeg.py:88: UserWarning: torio.io._streaming_media_decoder.StreamingMediaDecoder has been deprecated. This deprecation is part of a large refactoring effort to transition TorchAudio into a maintenance phase. The decoding and encoding capabilities of PyTorch for both audio and video are being consolidated into TorchCodec. Please see https://github.com/pytorch/audio/issues/3902 for more information. It will be removed from the 2.9 release.
  s = torchaudio.io.StreamReader(src, format, None, buffer_size)
-> noisy, labels = batch
> /gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py(49)validation_step()
-> emb, p = self(noisy)
P is  tensor([0.9441], device='cuda:0')
P is  tensor([0.9439], device='cuda:0')
P is  tensor([0.9437], device='cuda:0')
P is  tensor([0.9435], device='cuda:0')
P is  tensor([0.9433], device='cuda:0')
P is  tensor([0.9432], device='cuda:0')
P is  tensor([0.9430], device='cuda:0')
P is  tensor([0.9428], device='cuda:0')
P is  tensor([0.9426], device='cuda:0')
P is  tensor([0.9424], device='cuda:0')
P is  tensor([0.9422], device='cuda:0')
P is  tensor([0.9420], device='cuda:0')
P is  tensor([0.9419], device='cuda:0')
P is  tensor([0.9417], device='cuda:0')
P is  tensor([0.9415], device='cuda:0')
P is  tensor([0.9413], device='cuda:0')
P is  tensor([0.9411], device='cuda:0')
P is  tensor([0.9409], device='cuda:0')
P is  tensor([0.9407], device='cuda:0')
P is  tensor([0.9405], device='cuda:0')
P is  tensor([0.9403], device='cuda:0')
P is  tensor([0.9401], device='cuda:0')
P is  tensor([0.9400], device='cuda:0')
P is  tensor([0.9398], device='cuda:0')
P is  tensor([0.9396], device='cuda:0')
P is  tensor([0.9394], device='cuda:0')
P is  tensor([0.9392], device='cuda:0')
P is  tensor([0.9390], device='cuda:0')
P is  tensor([0.9388], device='cuda:0')
P is  tensor([0.9386], device='cuda:0')
P is  tensor([0.9384], device='cuda:0')
P is  tensor([0.9382], device='cuda:0')
P is  tensor([0.9380], device='cuda:0')
P is  tensor([0.9378], device='cuda:0')
P is  tensor([0.9376], device='cuda:0')
P is  tensor([0.9374], device='cuda:0')
P is  tensor([0.9372], device='cuda:0')
P is  tensor([0.9370], device='cuda:0')
P is  tensor([0.9368], device='cuda:0')
P is  tensor([0.9366], device='cuda:0')
P is  tensor([0.9364], device='cuda:0')
P is  tensor([0.9362], device='cuda:0')
P is  tensor([0.9359], device='cuda:0')
P is  tensor([0.9357], device='cuda:0')
P is  tensor([0.9355], device='cuda:0')
P is  tensor([0.9353], device='cuda:0')
P is  tensor([0.9351], device='cuda:0')
P is  tensor([0.9349], device='cuda:0')
P is  tensor([0.9347], device='cuda:0')
P is  tensor([0.9345], device='cuda:0')
P is  tensor([0.9343], device='cuda:0')
P is  tensor([0.9341], device='cuda:0')
P is  tensor([0.9338], device='cuda:0')
P is  tensor([0.9336], device='cuda:0')
P is  tensor([0.9334], device='cuda:0')
P is  tensor([0.9332], device='cuda:0')
P is  tensor([0.9330], device='cuda:0')
P is  tensor([0.9328], device='cuda:0')
P is  tensor([0.9325], device='cuda:0')
P is  tensor([0.9323], device='cuda:0')
P is  tensor([0.9321], device='cuda:0')
P is  tensor([0.9319], device='cuda:0')
P is  tensor([0.9317], device='cuda:0')
P is  tensor([0.9315], device='cuda:0')
P is  tensor([0.9312], device='cuda:0')
P is  tensor([0.9310], device='cuda:0')
P is  tensor([0.9308], device='cuda:0')
P is  tensor([0.9306], device='cuda:0')
P is  tensor([0.9304], device='cuda:0')
P is  tensor([0.9301], device='cuda:0')
P is  tensor([0.9299], device='cuda:0')
P is  tensor([0.9297], device='cuda:0')
P is  tensor([0.9295], device='cuda:0')
P is  tensor([0.9292], device='cuda:0')
P is  tensor([0.9290], device='cuda:0')
P is  tensor([0.9288], device='cuda:0')
P is  tensor([0.9285], device='cuda:0')
P is  tensor([0.9283], device='cuda:0')
P is  tensor([0.9281], device='cuda:0')
P is  tensor([0.9279], device='cuda:0')
P is  tensor([0.9276], device='cuda:0')
P is  tensor([0.9274], device='cuda:0')
P is  tensor([0.9272], device='cuda:0')
P is  tensor([0.9269], device='cuda:0')
P is  tensor([0.9267], device='cuda:0')
P is  tensor([0.9265], device='cuda:0')
P is  tensor([0.9262], device='cuda:0')
P is  tensor([0.9260], device='cuda:0')
P is  tensor([0.9258], device='cuda:0')
P is  tensor([0.9255], device='cuda:0')
P is  tensor([0.9253], device='cuda:0')
P is  tensor([0.9251], device='cuda:0')
P is  tensor([0.9248], device='cuda:0')
P is  tensor([0.9246], device='cuda:0')
P is  tensor([0.9244], device='cuda:0')
P is  tensor([0.9241], device='cuda:0')
P is  tensor([0.9239], device='cuda:0')
P is  tensor([0.9237], device='cuda:0')
P is  tensor([0.9234], device='cuda:0')
P is  tensor([0.9232], device='cuda:0')
P is  tensor([0.9229], device='cuda:0')
P is  tensor([0.9227], device='cuda:0')
P is  tensor([0.9225], device='cuda:0')
P is  tensor([0.9222], device='cuda:0')
P is  tensor([0.9220], device='cuda:0')
P is  tensor([0.9217], device='cuda:0')
P is  tensor([0.9215], device='cuda:0')
P is  tensor([0.9213], device='cuda:0')
P is  tensor([0.9210], device='cuda:0')
P is  tensor([0.9208], device='cuda:0')
P is  tensor([0.9205], device='cuda:0')
P is  tensor([0.9203], device='cuda:0')
P is  tensor([0.9200], device='cuda:0')
P is  tensor([0.9198], device='cuda:0')
P is  tensor([0.9195], device='cuda:0')
P is  tensor([0.9193], device='cuda:0')
P is  tensor([0.9190], device='cuda:0')
P is  tensor([0.9188], device='cuda:0')
P is  tensor([0.9185], device='cuda:0')
P is  tensor([0.9183], device='cuda:0')
P is  tensor([0.9180], device='cuda:0')
P is  tensor([0.9178], device='cuda:0')
P is  tensor([0.9175], device='cuda:0')
P is  tensor([0.9173], device='cuda:0')
P is  tensor([0.9170], device='cuda:0')
P is  tensor([0.9168], device='cuda:0')
P is  tensor([0.9165], device='cuda:0')
P is  tensor([0.9162], device='cuda:0')
P is  tensor([0.9160], device='cuda:0')
P is  tensor([0.9157], device='cuda:0')
P is  tensor([0.9155], device='cuda:0')
P is  tensor([0.9152], device='cuda:0')
P is  tensor([0.9149], device='cuda:0')
P is  tensor([0.9147], device='cuda:0')
P is  tensor([0.9144], device='cuda:0')
P is  tensor([0.9142], device='cuda:0')
P is  tensor([0.9139], device='cuda:0')
P is  tensor([0.9136], device='cuda:0')
P is  tensor([0.9134], device='cuda:0')
P is  tensor([0.9131], device='cuda:0')
P is  tensor([0.9128], device='cuda:0')
P is  tensor([0.9126], device='cuda:0')
P is  tensor([0.9123], device='cuda:0')
P is  tensor([0.9120], device='cuda:0')
P is  tensor([0.9117], device='cuda:0')
P is  tensor([0.9115], device='cuda:0')
P is  tensor([0.9112], device='cuda:0')
P is  tensor([0.9109], device='cuda:0')
P is  tensor([0.9107], device='cuda:0')
P is  tensor([0.9104], device='cuda:0')
P is  tensor([0.9101], device='cuda:0')
P is  tensor([0.9098], device='cuda:0')
P is  tensor([0.9096], device='cuda:0')
P is  tensor([0.9093], device='cuda:0')
P is  tensor([0.9090], device='cuda:0')
P is  tensor([0.9087], device='cuda:0')
P is  tensor([0.9085], device='cuda:0')
P is  tensor([0.9082], device='cuda:0')
P is  tensor([0.9079], device='cuda:0')
P is  tensor([0.9076], device='cuda:0')
P is  tensor([0.9073], device='cuda:0')
P is  tensor([0.9070], device='cuda:0')
P is  tensor([0.9068], device='cuda:0')
P is  tensor([0.9065], device='cuda:0')
P is  tensor([0.9062], device='cuda:0')
P is  tensor([0.9059], device='cuda:0')
P is  tensor([0.9056], device='cuda:0')
P is  tensor([0.9053], device='cuda:0')
P is  tensor([0.9051], device='cuda:0')
P is  tensor([0.9048], device='cuda:0')
P is  tensor([0.9045], device='cuda:0')
P is  tensor([0.9042], device='cuda:0')
P is  tensor([0.9039], device='cuda:0')
P is  tensor([0.9036], device='cuda:0')
P is  tensor([0.9033], device='cuda:0')
P is  tensor([0.9030], device='cuda:0')
P is  tensor([0.9027], device='cuda:0')
P is  tensor([0.9024], device='cuda:0')
P is  tensor([0.9022], device='cuda:0')
P is  tensor([0.9019], device='cuda:0')
P is  tensor([0.9016], device='cuda:0')
P is  tensor([0.9013], device='cuda:0')
P is  tensor([0.9010], device='cuda:0')
P is  tensor([0.9007], device='cuda:0')
P is  tensor([0.9004], device='cuda:0')
P is  tensor([0.9001], device='cuda:0')
P is  tensor([0.8998], device='cuda:0')
P is  tensor([0.8995], device='cuda:0')
P is  tensor([0.8992], device='cuda:0')
P is  tensor([0.8989], device='cuda:0')
P is  tensor([0.8986], device='cuda:0')
P is  tensor([0.8983], device='cuda:0')
P is  tensor([0.8980], device='cuda:0')
P is  tensor([0.8977], device='cuda:0')
P is  tensor([0.8974], device='cuda:0')
P is  tensor([0.8971], device='cuda:0')
P is  tensor([0.8968], device='cuda:0')
P is  tensor([0.8964], device='cuda:0')
P is  tensor([0.8961], device='cuda:0')
P is  tensor([0.8958], device='cuda:0')
P is  tensor([0.8955], device='cuda:0')
P is  tensor([0.8952], device='cuda:0')
P is  tensor([0.8949], device='cuda:0')
P is  tensor([0.8946], device='cuda:0')
P is  tensor([0.8943], device='cuda:0')
P is  tensor([0.8940], device='cuda:0')
P is  tensor([0.8937], device='cuda:0')
P is  tensor([0.8933], device='cuda:0')
P is  tensor([0.8930], device='cuda:0')
P is  tensor([0.8927], device='cuda:0')
P is  tensor([0.8924], device='cuda:0')
P is  tensor([0.8921], device='cuda:0')
P is  tensor([0.8918], device='cuda:0')
P is  tensor([0.8915], device='cuda:0')
P is  tensor([0.8911], device='cuda:0')
P is  tensor([0.8908], device='cuda:0')
P is  tensor([0.8905], device='cuda:0')
P is  tensor([0.8902], device='cuda:0')
P is  tensor([0.8899], device='cuda:0')
P is  tensor([0.8895], device='cuda:0')
P is  tensor([0.8892], device='cuda:0')
P is  tensor([0.8889], device='cuda:0')
P is  tensor([0.8886], device='cuda:0')
P is  tensor([0.8882], device='cuda:0')
P is  tensor([0.8879], device='cuda:0')
P is  tensor([0.8876], device='cuda:0')
P is  tensor([0.8873], device='cuda:0')
P is  tensor([0.8869], device='cuda:0')
P is  tensor([0.8866], device='cuda:0')
P is  tensor([0.8863], device='cuda:0')
P is  tensor([0.8859], device='cuda:0')
P is  tensor([0.8856], device='cuda:0')
P is  tensor([0.8853], device='cuda:0')
P is  tensor([0.8849], device='cuda:0')
P is  tensor([0.8846], device='cuda:0')
P is  tensor([0.8842], device='cuda:0')
P is  tensor([0.8839], device='cuda:0')
P is  tensor([0.8836], device='cuda:0')
P is  tensor([0.8832], device='cuda:0')
P is  tensor([0.8829], device='cuda:0')
P is  tensor([0.8825], device='cuda:0')
P is  tensor([0.8822], device='cuda:0')
P is  tensor([0.8819], device='cuda:0')
P is  tensor([0.8815], device='cuda:0')
P is  tensor([0.8812], device='cuda:0')
P is  tensor([0.8808], device='cuda:0')
P is  tensor([0.8805], device='cuda:0')
P is  tensor([0.8801], device='cuda:0')
P is  tensor([0.8798], device='cuda:0')
P is  tensor([0.8794], device='cuda:0')
P is  tensor([0.8791], device='cuda:0')
P is  tensor([0.8787], device='cuda:0')
P is  tensor([0.8784], device='cuda:0')
P is  tensor([0.8780], device='cuda:0')
P is  tensor([0.8777], device='cuda:0')
P is  tensor([0.8773], device='cuda:0')
P is  tensor([0.8769], device='cuda:0')
P is  tensor([0.8766], device='cuda:0')
P is  tensor([0.8762], device='cuda:0')
P is  tensor([0.8759], device='cuda:0')
P is  tensor([0.8755], device='cuda:0')
P is  tensor([0.8751], device='cuda:0')
P is  tensor([0.8748], device='cuda:0')
P is  tensor([0.8744], device='cuda:0')
P is  tensor([0.8740], device='cuda:0')
P is  tensor([0.8736], device='cuda:0')
P is  tensor([0.8733], device='cuda:0')
P is  tensor([0.8729], device='cuda:0')
P is  tensor([0.8725], device='cuda:0')
P is  tensor([0.8722], device='cuda:0')
P is  tensor([0.8718], device='cuda:0')
P is  tensor([0.8714], device='cuda:0')
P is  tensor([0.8710], device='cuda:0')
P is  tensor([0.8707], device='cuda:0')
P is  tensor([0.8703], device='cuda:0')
P is  tensor([0.8699], device='cuda:0')
P is  tensor([0.8695], device='cuda:0')
P is  tensor([0.8691], device='cuda:0')
P is  tensor([0.8688], device='cuda:0')
P is  tensor([0.8684], device='cuda:0')
P is  tensor([0.8680], device='cuda:0')
P is  tensor([0.8676], device='cuda:0')
P is  tensor([0.8672], device='cuda:0')
P is  tensor([0.8669], device='cuda:0')
P is  tensor([0.8665], device='cuda:0')
P is  tensor([0.8661], device='cuda:0')
P is  tensor([0.8657], device='cuda:0')
P is  tensor([0.8653], device='cuda:0')
P is  tensor([0.8649], device='cuda:0')
P is  tensor([0.8646], device='cuda:0')
P is  tensor([0.8642], device='cuda:0')
P is  tensor([0.8638], device='cuda:0')
P is  tensor([0.8634], device='cuda:0')
P is  tensor([0.8630], device='cuda:0')
P is  tensor([0.8626], device='cuda:0')
P is  tensor([0.8622], device='cuda:0')
P is  tensor([0.8618], device='cuda:0')
P is  tensor([0.8614], device='cuda:0')
P is  tensor([0.8610], device='cuda:0')
P is  tensor([0.8606], device='cuda:0')
P is  tensor([0.8602], device='cuda:0')
P is  tensor([0.8598], device='cuda:0')
P is  tensor([0.8594], device='cuda:0')
P is  tensor([0.8590], device='cuda:0')
P is  tensor([0.8586], device='cuda:0')
P is  tensor([0.8582], device='cuda:0')
P is  tensor([0.8578], device='cuda:0')
P is  tensor([0.8574], device='cuda:0')
P is  tensor([0.8570], device='cuda:0')
P is  tensor([0.8566], device='cuda:0')
P is  tensor([0.8562], device='cuda:0')
P is  tensor([0.8557], device='cuda:0')
P is  tensor([0.8553], device='cuda:0')
P is  tensor([0.8549], device='cuda:0')
P is  tensor([0.8545], device='cuda:0')
P is  tensor([0.8541], device='cuda:0')
P is  tensor([0.8537], device='cuda:0')
P is  tensor([0.8533], device='cuda:0')
P is  tensor([0.8528], device='cuda:0')
P is  tensor([0.8524], device='cuda:0')
P is  tensor([0.8520], device='cuda:0')
P is  tensor([0.8516], device='cuda:0')
P is  tensor([0.8512], device='cuda:0')
P is  tensor([0.8507], device='cuda:0')
P is  tensor([0.8503], device='cuda:0')
P is  tensor([0.8499], device='cuda:0')
P is  tensor([0.8495], device='cuda:0')
P is  tensor([0.8490], device='cuda:0')
P is  tensor([0.8486], device='cuda:0')
P is  tensor([0.8482], device='cuda:0')
P is  tensor([0.8477], device='cuda:0')
P is  tensor([0.8473], device='cuda:0')
P is  tensor([0.8469], device='cuda:0')
P is  tensor([0.8464], device='cuda:0')
P is  tensor([0.8460], device='cuda:0')
P is  tensor([0.8455], device='cuda:0')
P is  tensor([0.8451], device='cuda:0')
P is  tensor([0.8447], device='cuda:0')
P is  tensor([0.8442], device='cuda:0')
P is  tensor([0.8438], device='cuda:0')
P is  tensor([0.8433], device='cuda:0')
P is  tensor([0.8429], device='cuda:0')
P is  tensor([0.8424], device='cuda:0')
P is  tensor([0.8420], device='cuda:0')
P is  tensor([0.8415], device='cuda:0')
P is  tensor([0.8411], device='cuda:0')
P is  tensor([0.8407], device='cuda:0')
P is  tensor([0.8402], device='cuda:0')
P is  tensor([0.8397], device='cuda:0')
P is  tensor([0.8393], device='cuda:0')
P is  tensor([0.8388], device='cuda:0')
P is  tensor([0.8384], device='cuda:0')
P is  tensor([0.8379], device='cuda:0')
P is  tensor([0.8375], device='cuda:0')
P is  tensor([0.8370], device='cuda:0')
P is  tensor([0.8366], device='cuda:0')
P is  tensor([0.8361], device='cuda:0')
P is  tensor([0.8356], device='cuda:0')
P is  tensor([0.8352], device='cuda:0')
P is  tensor([0.8347], device='cuda:0')
P is  tensor([0.8342], device='cuda:0')
P is  tensor([0.8338], device='cuda:0')
P is  tensor([0.8333], device='cuda:0')
P is  tensor([0.8329], device='cuda:0')
P is  tensor([0.8324], device='cuda:0')
P is  tensor([0.8319], device='cuda:0')
P is  tensor([0.8315], device='cuda:0')
P is  tensor([0.8310], device='cuda:0')
P is  tensor([0.8305], device='cuda:0')
P is  tensor([0.8300], device='cuda:0')
P is  tensor([0.8296], device='cuda:0')
P is  tensor([0.8291], device='cuda:0')
P is  tensor([0.8286], device='cuda:0')
P is  tensor([0.8281], device='cuda:0')
P is  tensor([0.8276], device='cuda:0')
P is  tensor([0.8271], device='cuda:0')
P is  tensor([0.8267], device='cuda:0')
P is  tensor([0.8262], device='cuda:0')
P is  tensor([0.8257], device='cuda:0')
P is  tensor([0.8252], device='cuda:0')
P is  tensor([0.8247], device='cuda:0')
P is  tensor([0.8242], device='cuda:0')
P is  tensor([0.8237], device='cuda:0')
P is  tensor([0.8232], device='cuda:0')
P is  tensor([0.8227], device='cuda:0')
P is  tensor([0.8222], device='cuda:0')
P is  tensor([0.8217], device='cuda:0')
P is  tensor([0.8212], device='cuda:0')
P is  tensor([0.8207], device='cuda:0')
P is  tensor([0.8202], device='cuda:0')
P is  tensor([0.8197], device='cuda:0')
P is  tensor([0.8192], device='cuda:0')
P is  tensor([0.8187], device='cuda:0')
P is  tensor([0.8182], device='cuda:0')
P is  tensor([0.8177], device='cuda:0')
P is  tensor([0.8172], device='cuda:0')
P is  tensor([0.8167], device='cuda:0')
P is  tensor([0.8162], device='cuda:0')
P is  tensor([0.8157], device='cuda:0')
P is  tensor([0.8152], device='cuda:0')
P is  tensor([0.8147], device='cuda:0')
P is  tensor([0.8142], device='cuda:0')
P is  tensor([0.8137], device='cuda:0')
P is  tensor([0.8132], device='cuda:0')
P is  tensor([0.8126], device='cuda:0')
P is  tensor([0.8121], device='cuda:0')
P is  tensor([0.8116], device='cuda:0')
P is  tensor([0.8111], device='cuda:0')
P is  tensor([0.8106], device='cuda:0')
P is  tensor([0.8100], device='cuda:0')
P is  tensor([0.8095], device='cuda:0')
P is  tensor([0.8090], device='cuda:0')
P is  tensor([0.8085], device='cuda:0')
P is  tensor([0.8080], device='cuda:0')
P is  tensor([0.8074], device='cuda:0')
P is  tensor([0.8069], device='cuda:0')
P is  tensor([0.8064], device='cuda:0')
P is  tensor([0.8058], device='cuda:0')
P is  tensor([0.8053], device='cuda:0')
P is  tensor([0.8048], device='cuda:0')
P is  tensor([0.8042], device='cuda:0')
P is  tensor([0.8037], device='cuda:0')
P is  tensor([0.8031], device='cuda:0')
P is  tensor([0.8026], device='cuda:0')
P is  tensor([0.8021], device='cuda:0')
P is  tensor([0.8015], device='cuda:0')
P is  tensor([0.8010], device='cuda:0')
P is  tensor([0.8004], device='cuda:0')
P is  tensor([0.7999], device='cuda:0')
P is  tensor([0.7993], device='cuda:0')
P is  tensor([0.7988], device='cuda:0')
P is  tensor([0.7982], device='cuda:0')
P is  tensor([0.7977], device='cuda:0')
P is  tensor([0.7971], device='cuda:0')
P is  tensor([0.7966], device='cuda:0')
P is  tensor([0.7960], device='cuda:0')
P is  tensor([0.7955], device='cuda:0')
P is  tensor([0.7949], device='cuda:0')
P is  tensor([0.7944], device='cuda:0')
P is  tensor([0.7938], device='cuda:0')
P is  tensor([0.7932], device='cuda:0')
P is  tensor([0.7927], device='cuda:0')
P is  tensor([0.7921], device='cuda:0')
P is  tensor([0.7915], device='cuda:0')
P is  tensor([0.7910], device='cuda:0')
P is  tensor([0.7904], device='cuda:0')
P is  tensor([0.7898], device='cuda:0')
P is  tensor([0.7893], device='cuda:0')
P is  tensor([0.7887], device='cuda:0')
P is  tensor([0.7881], device='cuda:0')
P is  tensor([0.7875], device='cuda:0')
P is  tensor([0.7870], device='cuda:0')
P is  tensor([0.7864], device='cuda:0')
P is  tensor([0.7858], device='cuda:0')
P is  tensor([0.7852], device='cuda:0')
P is  tensor([0.7846], device='cuda:0')
P is  tensor([0.7840], device='cuda:0')
P is  tensor([0.7835], device='cuda:0')
P is  tensor([0.7829], device='cuda:0')
P is  tensor([0.7823], device='cuda:0')
P is  tensor([0.7817], device='cuda:0')
P is  tensor([0.7811], device='cuda:0')
P is  tensor([0.7805], device='cuda:0')
P is  tensor([0.7799], device='cuda:0')
P is  tensor([0.7793], device='cuda:0')
P is  tensor([0.7787], device='cuda:0')
P is  tensor([0.7781], device='cuda:0')
P is  tensor([0.7775], device='cuda:0')
P is  tensor([0.7769], device='cuda:0')
P is  tensor([0.7763], device='cuda:0')
P is  tensor([0.7757], device='cuda:0')
P is  tensor([0.7752], device='cuda:0')
P is  tensor([0.7746], device='cuda:0')
P is  tensor([0.7740], device='cuda:0')
P is  tensor([0.7734], device='cuda:0')
P is  tensor([0.7728], device='cuda:0')
P is  tensor([0.7722], device='cuda:0')
P is  tensor([0.7716], device='cuda:0')
P is  tensor([0.7710], device='cuda:0')
P is  tensor([0.7704], device='cuda:0')
P is  tensor([0.7698], device='cuda:0')
P is  tensor([0.7691], device='cuda:0')
P is  tensor([0.7685], device='cuda:0')
P is  tensor([0.7679], device='cuda:0')
P is  tensor([0.7673], device='cuda:0')
P is  tensor([0.7667], device='cuda:0')
P is  tensor([0.7661], device='cuda:0')
P is  tensor([0.7655], device='cuda:0')
P is  tensor([0.7649], device='cuda:0')
P is  tensor([0.7642], device='cuda:0')
P is  tensor([0.7636], device='cuda:0')
P is  tensor([0.7630], device='cuda:0')
P is  tensor([0.7624], device='cuda:0')
P is  tensor([0.7617], device='cuda:0')
P is  tensor([0.7611], device='cuda:0')
P is  tensor([0.7605], device='cuda:0')
P is  tensor([0.7599], device='cuda:0')
P is  tensor([0.7592], device='cuda:0')
P is  tensor([0.7586], device='cuda:0')
P is  tensor([0.7580], device='cuda:0')
P is  tensor([0.7573], device='cuda:0')
P is  tensor([0.7567], device='cuda:0')
P is  tensor([0.7560], device='cuda:0')
P is  tensor([0.7554], device='cuda:0')
P is  tensor([0.7548], device='cuda:0')
P is  tensor([0.7541], device='cuda:0')
P is  tensor([0.7535], device='cuda:0')
P is  tensor([0.7529], device='cuda:0')
P is  tensor([0.7522], device='cuda:0')
P is  tensor([0.7516], device='cuda:0')
P is  tensor([0.7509], device='cuda:0')
P is  tensor([0.7503], device='cuda:0')
P is  tensor([0.7496], device='cuda:0')
P is  tensor([0.7490], device='cuda:0')
P is  tensor([0.7483], device='cuda:0')
P is  tensor([0.7477], device='cuda:0')
P is  tensor([0.7470], device='cuda:0')
P is  tensor([0.7464], device='cuda:0')
P is  tensor([0.7457], device='cuda:0')
P is  tensor([0.7451], device='cuda:0')
P is  tensor([0.7444], device='cuda:0')
P is  tensor([0.7438], device='cuda:0')
P is  tensor([0.7431], device='cuda:0')
P is  tensor([0.7425], device='cuda:0')
P is  tensor([0.7418], device='cuda:0')
P is  tensor([0.7411], device='cuda:0')
P is  tensor([0.7405], device='cuda:0')
P is  tensor([0.7398], device='cuda:0')
P is  tensor([0.7392], device='cuda:0')
P is  tensor([0.7385], device='cuda:0')
P is  tensor([0.7378], device='cuda:0')
P is  tensor([0.7372], device='cuda:0')
P is  tensor([0.7365], device='cuda:0')
P is  tensor([0.7358], device='cuda:0')
P is  tensor([0.7351], device='cuda:0')
P is  tensor([0.7345], device='cuda:0')
P is  tensor([0.7338], device='cuda:0')
P is  tensor([0.7331], device='cuda:0')
P is  tensor([0.7324], device='cuda:0')
P is  tensor([0.7318], device='cuda:0')
P is  tensor([0.7311], device='cuda:0')
P is  tensor([0.7304], device='cuda:0')
P is  tensor([0.7297], device='cuda:0')
P is  tensor([0.7290], device='cuda:0')
P is  tensor([0.7284], device='cuda:0')
P is  tensor([0.7277], device='cuda:0')
P is  tensor([0.7270], device='cuda:0')
P is  tensor([0.7263], device='cuda:0')
P is  tensor([0.7256], device='cuda:0')
P is  tensor([0.7249], device='cuda:0')
P is  tensor([0.7242], device='cuda:0')
P is  tensor([0.7235], device='cuda:0')
P is  tensor([0.7228], device='cuda:0')
P is  tensor([0.7221], device='cuda:0')
P is  tensor([0.7214], device='cuda:0')
P is  tensor([0.7207], device='cuda:0')
P is  tensor([0.7201], device='cuda:0')
P is  tensor([0.7194], device='cuda:0')
P is  tensor([0.7187], device='cuda:0')
P is  tensor([0.7180], device='cuda:0')
P is  tensor([0.7173], device='cuda:0')
P is  tensor([0.7166], device='cuda:0')
P is  tensor([0.7159], device='cuda:0')
P is  tensor([0.7152], device='cuda:0')
P is  tensor([0.7145], device='cuda:0')
P is  tensor([0.7138], device='cuda:0')
P is  tensor([0.7131], device='cuda:0')
P is  tensor([0.7124], device='cuda:0')
P is  tensor([0.7117], device='cuda:0')
P is  tensor([0.7110], device='cuda:0')
P is  tensor([0.7103], device='cuda:0')
P is  tensor([0.7096], device='cuda:0')
P is  tensor([0.7089], device='cuda:0')
P is  tensor([0.7082], device='cuda:0')
P is  tensor([0.7074], device='cuda:0')
P is  tensor([0.7067], device='cuda:0')
P is  tensor([0.7060], device='cuda:0')
P is  tensor([0.7053], device='cuda:0')
P is  tensor([0.7046], device='cuda:0')
P is  tensor([0.7038], device='cuda:0')
P is  tensor([0.7031], device='cuda:0')
P is  tensor([0.7024], device='cuda:0')
P is  tensor([0.7017], device='cuda:0')
P is  tensor([0.7009], device='cuda:0')
P is  tensor([0.7002], device='cuda:0')
P is  tensor([0.6995], device='cuda:0')
P is  tensor([0.6987], device='cuda:0')
P is  tensor([0.6980], device='cuda:0')
P is  tensor([0.6973], device='cuda:0')
P is  tensor([0.6965], device='cuda:0')
P is  tensor([0.6958], device='cuda:0')
P is  tensor([0.6951], device='cuda:0')
P is  tensor([0.6943], device='cuda:0')
P is  tensor([0.6936], device='cuda:0')
P is  tensor([0.6928], device='cuda:0')
P is  tensor([0.6921], device='cuda:0')
P is  tensor([0.6913], device='cuda:0')
P is  tensor([0.6906], device='cuda:0')
P is  tensor([0.6899], device='cuda:0')
P is  tensor([0.6891], device='cuda:0')
P is  tensor([0.6883], device='cuda:0')
P is  tensor([0.6876], device='cuda:0')
P is  tensor([0.6868], device='cuda:0')
P is  tensor([0.6861], device='cuda:0')
P is  tensor([0.6853], device='cuda:0')
P is  tensor([0.6846], device='cuda:0')
P is  tensor([0.6838], device='cuda:0')
P is  tensor([0.6830], device='cuda:0')
P is  tensor([0.6823], device='cuda:0')
P is  tensor([0.6815], device='cuda:0')
P is  tensor([0.6807], device='cuda:0')
P is  tensor([0.6800], device='cuda:0')
P is  tensor([0.6792], device='cuda:0')
P is  tensor([0.6784], device='cuda:0')
P is  tensor([0.6777], device='cuda:0')
P is  tensor([0.6769], device='cuda:0')
P is  tensor([0.6761], device='cuda:0')
P is  tensor([0.6754], device='cuda:0')
P is  tensor([0.6746], device='cuda:0')
P is  tensor([0.6738], device='cuda:0')
P is  tensor([0.6730], device='cuda:0')
P is  tensor([0.6722], device='cuda:0')
P is  tensor([0.6715], device='cuda:0')
P is  tensor([0.6707], device='cuda:0')
P is  tensor([0.6699], device='cuda:0')
P is  tensor([0.6691], device='cuda:0')
P is  tensor([0.6683], device='cuda:0')
P is  tensor([0.6675], device='cuda:0')
P is  tensor([0.6667], device='cuda:0')
P is  tensor([0.6659], device='cuda:0')
P is  tensor([0.6652], device='cuda:0')
P is  tensor([0.6644], device='cuda:0')
P is  tensor([0.6636], device='cuda:0')
P is  tensor([0.6628], device='cuda:0')
P is  tensor([0.6620], device='cuda:0')
P is  tensor([0.6612], device='cuda:0')
P is  tensor([0.6604], device='cuda:0')
P is  tensor([0.6596], device='cuda:0')
P is  tensor([0.6588], device='cuda:0')
P is  tensor([0.6580], device='cuda:0')
P is  tensor([0.6572], device='cuda:0')
P is  tensor([0.6564], device='cuda:0')
P is  tensor([0.6557], device='cuda:0')
P is  tensor([0.6549], device='cuda:0')
P is  tensor([0.6541], device='cuda:0')
P is  tensor([0.6533], device='cuda:0')
P is  tensor([0.6525], device='cuda:0')
P is  tensor([0.6517], device='cuda:0')
P is  tensor([0.6509], device='cuda:0')
P is  tensor([0.6501], device='cuda:0')
P is  tensor([0.6493], device='cuda:0')
P is  tensor([0.6485], device='cuda:0')
P is  tensor([0.6477], device='cuda:0')
P is  tensor([0.6469], device='cuda:0')
P is  tensor([0.6461], device='cuda:0')
P is  tensor([0.6452], device='cuda:0')
P is  tensor([0.6444], device='cuda:0')
P is  tensor([0.6436], device='cuda:0')
P is  tensor([0.6428], device='cuda:0')
P is  tensor([0.6420], device='cuda:0')
P is  tensor([0.6412], device='cuda:0')
P is  tensor([0.6404], device='cuda:0')
P is  tensor([0.6395], device='cuda:0')
P is  tensor([0.6387], device='cuda:0')
P is  tensor([0.6379], device='cuda:0')
P is  tensor([0.6371], device='cuda:0')
P is  tensor([0.6363], device='cuda:0')
P is  tensor([0.6355], device='cuda:0')
P is  tensor([0.6346], device='cuda:0')
P is  tensor([0.6338], device='cuda:0')
P is  tensor([0.6330], device='cuda:0')
P is  tensor([0.6322], device='cuda:0')
P is  tensor([0.6314], device='cuda:0')
P is  tensor([0.6305], device='cuda:0')
P is  tensor([0.6297], device='cuda:0')
P is  tensor([0.6289], device='cuda:0')
P is  tensor([0.6281], device='cuda:0')
P is  tensor([0.6272], device='cuda:0')
P is  tensor([0.6264], device='cuda:0')
P is  tensor([0.6256], device='cuda:0')
P is  tensor([0.6247], device='cuda:0')
P is  tensor([0.6239], device='cuda:0')
P is  tensor([0.6231], device='cuda:0')
P is  tensor([0.6222], device='cuda:0')
P is  tensor([0.6214], device='cuda:0')
P is  tensor([0.6206], device='cuda:0')
P is  tensor([0.6197], device='cuda:0')
P is  tensor([0.6189], device='cuda:0')
P is  tensor([0.6180], device='cuda:0')
P is  tensor([0.6172], device='cuda:0')
P is  tensor([0.6164], device='cuda:0')
P is  tensor([0.6155], device='cuda:0')
P is  tensor([0.6147], device='cuda:0')
P is  tensor([0.6139], device='cuda:0')
P is  tensor([0.6130], device='cuda:0')
P is  tensor([0.6122], device='cuda:0')
P is  tensor([0.6113], device='cuda:0')
P is  tensor([0.6105], device='cuda:0')
P is  tensor([0.6097], device='cuda:0')
P is  tensor([0.6088], device='cuda:0')
P is  tensor([0.6080], device='cuda:0')
P is  tensor([0.6072], device='cuda:0')
P is  tensor([0.6063], device='cuda:0')
P is  tensor([0.6055], device='cuda:0')
P is  tensor([0.6046], device='cuda:0')
P is  tensor([0.6038], device='cuda:0')
P is  tensor([0.6030], device='cuda:0')
P is  tensor([0.6021], device='cuda:0')
P is  tensor([0.6013], device='cuda:0')
P is  tensor([0.6004], device='cuda:0')
P is  tensor([0.5996], device='cuda:0')
P is  tensor([0.5987], device='cuda:0')
P is  tensor([0.5979], device='cuda:0')
P is  tensor([0.5970], device='cuda:0')
P is  tensor([0.5962], device='cuda:0')
P is  tensor([0.5954], device='cuda:0')
P is  tensor([0.5945], device='cuda:0')
P is  tensor([0.5937], device='cuda:0')
P is  tensor([0.5928], device='cuda:0')
P is  tensor([0.5920], device='cuda:0')
P is  tensor([0.5911], device='cuda:0')
P is  tensor([0.5903], device='cuda:0')
P is  tensor([0.5894], device='cuda:0')
P is  tensor([0.5886], device='cuda:0')
P is  tensor([0.5877], device='cuda:0')
P is  tensor([0.5869], device='cuda:0')
P is  tensor([0.5860], device='cuda:0')
P is  tensor([0.5852], device='cuda:0')
P is  tensor([0.5843], device='cuda:0')
P is  tensor([0.5835], device='cuda:0')
P is  tensor([0.5826], device='cuda:0')
P is  tensor([0.5818], device='cuda:0')
P is  tensor([0.5809], device='cuda:0')
P is  tensor([0.5801], device='cuda:0')
P is  tensor([0.5792], device='cuda:0')
P is  tensor([0.5783], device='cuda:0')
P is  tensor([0.5775], device='cuda:0')
P is  tensor([0.5766], device='cuda:0')
P is  tensor([0.5758], device='cuda:0')
P is  tensor([0.5749], device='cuda:0')
P is  tensor([0.5741], device='cuda:0')
P is  tensor([0.5732], device='cuda:0')
P is  tensor([0.5723], device='cuda:0')
P is  tensor([0.5715], device='cuda:0')
P is  tensor([0.5706], device='cuda:0')
P is  tensor([0.5698], device='cuda:0')
P is  tensor([0.5689], device='cuda:0')
P is  tensor([0.5680], device='cuda:0')
P is  tensor([0.5672], device='cuda:0')
P is  tensor([0.5663], device='cuda:0')
P is  tensor([0.5654], device='cuda:0')
P is  tensor([0.5646], device='cuda:0')
P is  tensor([0.5637], device='cuda:0')
P is  tensor([0.5629], device='cuda:0')
P is  tensor([0.5620], device='cuda:0')
P is  tensor([0.5611], device='cuda:0')
P is  tensor([0.5603], device='cuda:0')
P is  tensor([0.5594], device='cuda:0')
P is  tensor([0.5585], device='cuda:0')
P is  tensor([0.5577], device='cuda:0')
P is  tensor([0.5568], device='cuda:0')
P is  tensor([0.5559], device='cuda:0')
P is  tensor([0.5550], device='cuda:0')
P is  tensor([0.5542], device='cuda:0')
P is  tensor([0.5533], device='cuda:0')
P is  tensor([0.5524], device='cuda:0')
P is  tensor([0.5516], device='cuda:0')
P is  tensor([0.5507], device='cuda:0')
P is  tensor([0.5498], device='cuda:0')
P is  tensor([0.5489], device='cuda:0')
P is  tensor([0.5481], device='cuda:0')
P is  tensor([0.5472], device='cuda:0')
P is  tensor([0.5463], device='cuda:0')
P is  tensor([0.5454], device='cuda:0')
P is  tensor([0.5446], device='cuda:0')
P is  tensor([0.5437], device='cuda:0')
P is  tensor([0.5428], device='cuda:0')
P is  tensor([0.5419], device='cuda:0')
P is  tensor([0.5411], device='cuda:0')
P is  tensor([0.5402], device='cuda:0')
P is  tensor([0.5393], device='cuda:0')
P is  tensor([0.5384], device='cuda:0')
P is  tensor([0.5376], device='cuda:0')
P is  tensor([0.5367], device='cuda:0')
P is  tensor([0.5358], device='cuda:0')
P is  tensor([0.5349], device='cuda:0')
P is  tensor([0.5340], device='cuda:0')
P is  tensor([0.5331], device='cuda:0')
P is  tensor([0.5322], device='cuda:0')
P is  tensor([0.5313], device='cuda:0')
P is  tensor([0.5304], device='cuda:0')
P is  tensor([0.5296], device='cuda:0')
P is  tensor([0.5287], device='cuda:0')
P is  tensor([0.5278], device='cuda:0')
P is  tensor([0.5269], device='cuda:0')
P is  tensor([0.5260], device='cuda:0')
P is  tensor([0.5251], device='cuda:0')
P is  tensor([0.5242], device='cuda:0')
P is  tensor([0.5233], device='cuda:0')
P is  tensor([0.5224], device='cuda:0')
P is  tensor([0.5215], device='cuda:0')
P is  tensor([0.5206], device='cuda:0')
P is  tensor([0.5198], device='cuda:0')
P is  tensor([0.5189], device='cuda:0')
P is  tensor([0.5180], device='cuda:0')
P is  tensor([0.5171], device='cuda:0')
P is  tensor([0.5162], device='cuda:0')
P is  tensor([0.5153], device='cuda:0')
P is  tensor([0.5144], device='cuda:0')
P is  tensor([0.5135], device='cuda:0')
P is  tensor([0.5126], device='cuda:0')
P is  tensor([0.5117], device='cuda:0')
P is  tensor([0.5109], device='cuda:0')
P is  tensor([0.5100], device='cuda:0')
P is  tensor([0.5091], device='cuda:0')
P is  tensor([0.5082], device='cuda:0')
P is  tensor([0.5073], device='cuda:0')
P is  tensor([0.5064], device='cuda:0')
P is  tensor([0.5055], device='cuda:0')
P is  tensor([0.5047], device='cuda:0')
P is  tensor([0.5038], device='cuda:0')
P is  tensor([0.5029], device='cuda:0')
P is  tensor([0.5020], device='cuda:0')
P is  tensor([0.5011], device='cuda:0')
P is  tensor([0.5002], device='cuda:0')
P is  tensor([0.4993], device='cuda:0')
> /gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py(50)validation_step()
-> mid = time.time()
> /gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py(51)validation_step()
-> loss = self.loss(emb, p, labels)
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
> /gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py(51)validation_step()
-> loss = self.loss(emb, p, labels)
Traceback (most recent call last):
  File "/gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py", line 93, in <module>
    trainer.fit(model, dm)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 560, in fit
    call._call_and_handle_interrupt(
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 49, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 598, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1011, in _run
    results = self._run_stage()
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1053, in _run_stage
    self._run_sanity_check()
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1082, in _run_sanity_check
    val_loop.run()
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 329, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 412, in validation_step
    return self.lightning_module.validation_step(*args, **kwargs)
  File "/gpfs/accounts/profdj_root/profdj0/sidcs/codebase/speaker_embedding_codebase/trainer.py", line 51, in validation_step
    loss = self.loss(emb, p, labels)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/bdb.py", line 96, in trace_dispatch
    return self.dispatch_exception(frame, arg)
  File "/scratch/profdj_root/profdj0/sidcs/envs/miniconda3/envs/mtse/lib/python3.10/bdb.py", line 176, in dispatch_exception
    if self.quitting: raise BdbQuit
bdb.BdbQuit
